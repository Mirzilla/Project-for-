[{"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\UserWiki.js":"3","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\HeroWiki.js":"4","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\AppRouter.js":"5","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\NavBar.js":"6","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\routes.js":"7","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\utils\\consts.js":"8","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Auth.js":"9","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Wiki.js":"10","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Admin.js":"11","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\HeroPage.js":"12","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroList.js":"13","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\RarityBar.js":"14","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\TypeBar.js":"15","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\userAPI.js":"16","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroItem.js":"17","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\index.js":"18","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateRarity.js":"19","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateHero.js":"20","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateType.js":"21","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\heroAPI.js":"22","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\Pages.js":"23"},{"size":422,"mtime":1653586534747,"results":"24","hashOfConfig":"25"},{"size":863,"mtime":1654782463048,"results":"26","hashOfConfig":"25"},{"size":423,"mtime":1654789669285,"results":"27","hashOfConfig":"25"},{"size":1405,"mtime":1654375894682,"results":"28","hashOfConfig":"25"},{"size":795,"mtime":1653587612013,"results":"29","hashOfConfig":"25"},{"size":2171,"mtime":1655029689147,"results":"30","hashOfConfig":"25"},{"size":683,"mtime":1653589199922,"results":"31","hashOfConfig":"25"},{"size":189,"mtime":1653575950653,"results":"32","hashOfConfig":"25"},{"size":3244,"mtime":1654790779559,"results":"33","hashOfConfig":"25"},{"size":1512,"mtime":1654782814948,"results":"34","hashOfConfig":"25"},{"size":1575,"mtime":1654368084863,"results":"35","hashOfConfig":"25"},{"size":1724,"mtime":1654371974102,"results":"36","hashOfConfig":"25"},{"size":468,"mtime":1653588377858,"results":"37","hashOfConfig":"25"},{"size":810,"mtime":1655030371318,"results":"38","hashOfConfig":"25"},{"size":744,"mtime":1653588459009,"results":"39","hashOfConfig":"25"},{"size":694,"mtime":1654783588133,"results":"40","hashOfConfig":"25"},{"size":1057,"mtime":1655029689176,"results":"41","hashOfConfig":"25"},{"size":407,"mtime":1654791714367,"results":"42","hashOfConfig":"25"},{"size":1388,"mtime":1654369912709,"results":"43","hashOfConfig":"25"},{"size":5585,"mtime":1655030371343,"results":"44","hashOfConfig":"25"},{"size":1342,"mtime":1654369912620,"results":"45","hashOfConfig":"25"},{"size":1085,"mtime":1654783190950,"results":"46","hashOfConfig":"25"},{"size":791,"mtime":1654374575608,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"e5y7mr",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\index.js",[],["102","103"],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\App.js",["104"],"import React, {useContext, useEffect, useState} from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n            check().then(data => {\n                user.setUser(true)\n                user.setIsAuth(true)\n            }).finally(() => setLoading(false))\n    }, [])\n    \n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n  return (\n      <BrowserRouter>\n          <NavBar/>\n        <AppRouter/>\n      </BrowserRouter>\n  );\n});\n\nexport default App;\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\UserWiki.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\HeroWiki.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\NavBar.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\routes.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\utils\\consts.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Auth.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Wiki.js",["105","106"],"import React, {useContext, useEffect} from \"react\";\r\nimport {Col, Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport RarityBar from \"../components/RarityBar\";\r\nimport HeroList from \"../components/HeroList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchHeroes, fetchRarity, fetchTypes} from \"../http/heroAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Wiki = observer(() => {\r\n    const {hero} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => hero.setTypes(data))\r\n        fetchRarity().then(data => hero.setRarities(data))\r\n        fetchHeroes(null, null, 1, 2).then(data => {\r\n            hero.setHeroes(data.rows)\r\n            hero.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchHeroes(hero.selectedType.id, hero.selectedRarity.id, hero.page, 2).then(data => {\r\n            hero.setHeroes(data.rows)\r\n            hero.setTotalCount(data.count)\r\n        })\r\n    }, [hero.page, hero.selectedType, hero.selectedRarity,])\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <RarityBar/>\r\n                    <HeroList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n})\r\nexport default Wiki;","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Admin.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\HeroPage.js",["107","108"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Col, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneHero} from \"../http/heroAPI\";\r\n\r\nconst HeroPage = () => {\r\n    const [hero, setHero] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneHero(id).then(data => setHero(data))\r\n    }, [])\r\n    return (\r\n        <Container className={\"mt-3\"}>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + hero.img}/>\r\n                </Col>\r\n                <Col md={4} >\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{hero.name}</h2>\r\n                    </Row>\r\n                    <div\r\n                        className={\"d-flex align-items-center justify-content-center \"}\r\n                        style={{background: `url(${bigStar}) no-repeat center center`, width:240, height:240, backgroundSize: 'cover', fontSize:64 }}\r\n\r\n                    >\r\n                        {hero.rating}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Опис</h1>\r\n                {hero.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.desc}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default HeroPage;","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroList.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\RarityBar.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\TypeBar.js",["109"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {hero} = useContext(Context)\n    return (\n        <ListGroup>\n            {hero.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === hero.selectedType.id}\n                    onClick={() => hero.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\userAPI.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroItem.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\index.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateRarity.js",["110"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createRarity, createType} from \"../../http/heroAPI\";\n\nconst CreateRarity = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addRarity = () => {\n        createRarity({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавити рідкість\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Уведіть назву рідкісті\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\n                <Button variant=\"outline-success\" onClick={addRarity}>Добавити</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateRarity;\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateHero.js",["111"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport { createHero,  fetchRarity, fetchTypes} from \"../../http/heroAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateHero = observer(({show, onHide}) => {\n    const {hero} = useContext(Context)\n    const [name, setName] = useState('')\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => hero.setTypes(data))\n        fetchRarity().then(data => hero.setRarities(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', desc: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addHero = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('img', file)\n        formData.append('rarityId', hero.selectedRarity.id)\n        formData.append('typeId', hero.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createHero(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            size =\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавити героя\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{hero.selectedType.name || \"Виберіть тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {hero.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => hero.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{hero.selectedRarity.name || \"Виберіть рідкість\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {hero.rarities.map(rarity =>\n                                <Dropdown.Item\n                                    onClick={() => hero.setSelectedRarity(rarity)}\n                                    key={rarity.id}\n                                >\n                                    {rarity.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Уведіть назву героя\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавити новий опис\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Уведіть опис\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.desc}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Уведіть опис\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Видалити\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\n                <Button variant=\"outline-success\" onClick={addHero}>Добавити</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateHero;\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\heroAPI.js",["112"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createRarity = async (rarity) => {\n    const {data} = await $authHost.post('api/rarity', rarity)\n    return data\n}\n\nexport const fetchRarity = async (typeId, rarityId, page, limit= 5) => {\n    const {data} = await $host.get('api/rarity', )\n    console.log(data)\n    return data\n}\n\nexport const createHero = async (hero) => {\n    const {data} = await $authHost.post('api/hero', hero)\n    return data\n}\n\nexport const fetchHeroes = async (typeId, rarityId, page, limit= 5) => {\n    const {data} = await $host.get('api/hero', {params: {\n            typeId, rarityId, page, limit\n        }})\n    console.log(data)\n    return data\n}\n\nexport const fetchOneHero = async (id) => {\n    const {data} = await $host.get('api/hero/' + id)\n    console.log(data)\n    return data\n}\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\Pages.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":19,"column":8,"nodeType":"119","endLine":19,"endColumn":10,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":22,"column":8,"nodeType":"119","endLine":22,"endColumn":10,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"121","line":29,"column":8,"nodeType":"119","endLine":29,"endColumn":60,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"128","line":12,"column":8,"nodeType":"119","endLine":12,"endColumn":10,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":11},{"ruleId":"124","severity":1,"message":"131","line":4,"column":23,"nodeType":"126","messageId":"127","endLine":4,"endColumn":33},{"ruleId":"117","severity":1,"message":"121","line":17,"column":8,"nodeType":"119","endLine":17,"endColumn":10,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"133","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":18},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'hero'. Either include it or remove the dependency array.",["137"],["138"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["139"],"'Col' is defined but never used.","'createType' is defined but never used.",["140"],"'jwt_decode' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"143","fix":"149"},"Update the dependencies array to be: [user]",{"range":"150","text":"151"},"Update the dependencies array to be: [hero]",{"range":"152","text":"153"},"Update the dependencies array to be: [hero.page, hero.selectedType, hero.selectedRarity, hero]",{"range":"154","text":"155"},"Update the dependencies array to be: [id]",{"range":"156","text":"157"},{"range":"158","text":"153"},[657,659],"[user]",[847,849],"[hero]",[1075,1127],"[hero.page, hero.selectedType, hero.selectedRarity, hero]",[453,455],"[id]",[683,685]]