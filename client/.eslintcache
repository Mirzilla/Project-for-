[{"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\UserWiki.js":"3","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\HeroWiki.js":"4","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\AppRouter.js":"5","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\NavBar.js":"6","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\routes.js":"7","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\utils\\consts.js":"8","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Auth.js":"9","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Wiki.js":"10","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Admin.js":"11","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\HeroPage.js":"12","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroList.js":"13","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\RarityBar.js":"14","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\TypeBar.js":"15","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\userAPI.js":"16","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroItem.js":"17","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\index.js":"18","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateRarity.js":"19","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateHero.js":"20","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateType.js":"21","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\heroAPI.js":"22","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\Pages.js":"23","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateMode.js":"24","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\modeApi.js":"25","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\ModeWiki.js":"26","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\ModePage.js":"27","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Mode.js":"28","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\ModeList.js":"29","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\ModeItem.js":"30"},{"size":492,"mtime":1655041694544,"results":"31","hashOfConfig":"32"},{"size":863,"mtime":1654782463048,"results":"33","hashOfConfig":"32"},{"size":423,"mtime":1654789669285,"results":"34","hashOfConfig":"32"},{"size":1405,"mtime":1654375894682,"results":"35","hashOfConfig":"32"},{"size":795,"mtime":1653587612013,"results":"36","hashOfConfig":"32"},{"size":2272,"mtime":1655047826273,"results":"37","hashOfConfig":"32"},{"size":917,"mtime":1655045041684,"results":"38","hashOfConfig":"32"},{"size":224,"mtime":1655039702627,"results":"39","hashOfConfig":"32"},{"size":3244,"mtime":1654790779559,"results":"40","hashOfConfig":"32"},{"size":1512,"mtime":1654782814948,"results":"41","hashOfConfig":"32"},{"size":2014,"mtime":1655040592262,"results":"42","hashOfConfig":"32"},{"size":1724,"mtime":1654371974102,"results":"43","hashOfConfig":"32"},{"size":468,"mtime":1653588377858,"results":"44","hashOfConfig":"32"},{"size":810,"mtime":1655030371318,"results":"45","hashOfConfig":"32"},{"size":744,"mtime":1653588459009,"results":"46","hashOfConfig":"32"},{"size":694,"mtime":1654783588133,"results":"47","hashOfConfig":"32"},{"size":1057,"mtime":1655029689176,"results":"48","hashOfConfig":"32"},{"size":407,"mtime":1654791714367,"results":"49","hashOfConfig":"32"},{"size":1388,"mtime":1654369912709,"results":"50","hashOfConfig":"32"},{"size":5578,"mtime":1655037287054,"results":"51","hashOfConfig":"32"},{"size":1342,"mtime":1654369912620,"results":"52","hashOfConfig":"32"},{"size":1085,"mtime":1654783190950,"results":"53","hashOfConfig":"32"},{"size":791,"mtime":1654374575608,"results":"54","hashOfConfig":"32"},{"size":4044,"mtime":1655040687545,"results":"55","hashOfConfig":"32"},{"size":519,"mtime":1655045736329,"results":"56","hashOfConfig":"32"},{"size":666,"mtime":1655041527656,"results":"57","hashOfConfig":"32"},{"size":1730,"mtime":1655046251263,"results":"58","hashOfConfig":"32"},{"size":1064,"mtime":1655044966535,"results":"59","hashOfConfig":"32"},{"size":509,"mtime":1655044575045,"results":"60","hashOfConfig":"32"},{"size":949,"mtime":1655046041947,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e5y7mr",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\App.js",["134"],"import React, {useContext, useEffect, useState} from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n            check().then(data => {\n                user.setUser(true)\n                user.setIsAuth(true)\n            }).finally(() => setLoading(false))\n    }, [])\n    \n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n  return (\n      <BrowserRouter>\n          <NavBar/>\n        <AppRouter/>\n      </BrowserRouter>\n  );\n});\n\nexport default App;\n",["135","136"],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\UserWiki.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\HeroWiki.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\NavBar.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\routes.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\utils\\consts.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Auth.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Wiki.js",["137","138"],"import React, {useContext, useEffect} from \"react\";\r\nimport {Col, Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport RarityBar from \"../components/RarityBar\";\r\nimport HeroList from \"../components/HeroList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchHeroes, fetchRarity, fetchTypes} from \"../http/heroAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Wiki = observer(() => {\r\n    const {hero} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => hero.setTypes(data))\r\n        fetchRarity().then(data => hero.setRarities(data))\r\n        fetchHeroes(null, null, 1, 2).then(data => {\r\n            hero.setHeroes(data.rows)\r\n            hero.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchHeroes(hero.selectedType.id, hero.selectedRarity.id, hero.page, 2).then(data => {\r\n            hero.setHeroes(data.rows)\r\n            hero.setTotalCount(data.count)\r\n        })\r\n    }, [hero.page, hero.selectedType, hero.selectedRarity,])\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <RarityBar/>\r\n                    <HeroList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n})\r\nexport default Wiki;","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Admin.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\HeroPage.js",["139","140"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Col, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneHero} from \"../http/heroAPI\";\r\n\r\nconst HeroPage = () => {\r\n    const [hero, setHero] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneHero(id).then(data => setHero(data))\r\n    }, [])\r\n    return (\r\n        <Container className={\"mt-3\"}>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + hero.img}/>\r\n                </Col>\r\n                <Col md={4} >\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{hero.name}</h2>\r\n                    </Row>\r\n                    <div\r\n                        className={\"d-flex align-items-center justify-content-center \"}\r\n                        style={{background: `url(${bigStar}) no-repeat center center`, width:240, height:240, backgroundSize: 'cover', fontSize:64 }}\r\n\r\n                    >\r\n                        {hero.rating}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Опис</h1>\r\n                {hero.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.desc}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default HeroPage;","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroList.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\RarityBar.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\TypeBar.js",["141"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {hero} = useContext(Context)\n    return (\n        <ListGroup>\n            {hero.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === hero.selectedType.id}\n                    onClick={() => hero.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\userAPI.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\HeroItem.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\index.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateRarity.js",["142"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createRarity, createType} from \"../../http/heroAPI\";\n\nconst CreateRarity = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addRarity = () => {\n        createRarity({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавити рідкість\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Уведіть назву рідкісті\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\n                <Button variant=\"outline-success\" onClick={addRarity}>Добавити</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateRarity;\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateHero.js",["143"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport { createHero,  fetchRarity, fetchTypes} from \"../../http/heroAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateHero = observer(({show, onHide}) => {\n    const {hero} = useContext(Context)\n    const [name, setName] = useState('')\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => hero.setTypes(data))\n        fetchRarity().then(data => hero.setRarities(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', desc: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addHero = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('img', file)\n        formData.append('rarityId', hero.selectedRarity.id)\n        formData.append('typeId', hero.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createHero(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            size =\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавити героя\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{hero.selectedType.name || \"Виберіть тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {hero.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => hero.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{hero.selectedRarity.name || \"Виберіть рідкість\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {hero.rarities.map(rarity =>\n                                <Dropdown.Item\n                                    onClick={() => hero.setSelectedRarity(rarity)}\n                                    key={rarity.id}\n                                >\n                                    {rarity.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Уведіть назву героя\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавити новий опис\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Уведіть опис\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.desc}\n                                    onChange={(e) => changeInfo('desc', e.target.value, i.number)}\n                                    placeholder=\"Уведіть опис\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Видалити\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\n                <Button variant=\"outline-success\" onClick={addHero}>Добавити</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateHero;\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\heroAPI.js",["144"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createRarity = async (rarity) => {\n    const {data} = await $authHost.post('api/rarity', rarity)\n    return data\n}\n\nexport const fetchRarity = async (typeId, rarityId, page, limit= 5) => {\n    const {data} = await $host.get('api/rarity', )\n    console.log(data)\n    return data\n}\n\nexport const createHero = async (hero) => {\n    const {data} = await $authHost.post('api/hero', hero)\n    return data\n}\n\nexport const fetchHeroes = async (typeId, rarityId, page, limit= 5) => {\n    const {data} = await $host.get('api/hero', {params: {\n            typeId, rarityId, page, limit\n        }})\n    console.log(data)\n    return data\n}\n\nexport const fetchOneHero = async (id) => {\n    const {data} = await $host.get('api/hero/' + id)\n    console.log(data)\n    return data\n}\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\Pages.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\modals\\CreateMode.js",["145","146","147","148"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport { createMode,  fetchModes} from \"../../http/modeApi\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateMode = observer(({show, onHide}) => {\r\n    const {mode} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', desc: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addMode = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('img', file)\r\n        formData.append('info', JSON.stringify(info))\r\n        createMode(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size =\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавити режим\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Уведіть назву режима\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавити новий опис\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Уведіть опис\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.desc}\r\n                                    onChange={(e) => changeInfo('desc', e.target.value, i.number)}\r\n                                    placeholder=\"Уведіть опис\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Видалити\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\r\n                <Button variant=\"outline-success\" onClick={addMode}>Добавити</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateMode;\r\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\http\\modeApi.js",["149"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createMode = async (mode) => {\r\n    const {data} = await $authHost.post('api/mode', mode)\r\n    return data\r\n}\r\nexport const fetchModes = async (page, limit= 5) => {\r\n    const {data} = await $host.get('api/mode', {params: {\r\n        page, limit\r\n        }})\r\n    console.log(data)\r\n    return data\r\n}\r\n\r\nexport const fetchOneMode = async (id) => {\r\n    const {data} = await $host.get('api/mode/' + id)\r\n    return data\r\n}\r\n","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\wiki\\ModeWiki.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\ModePage.js",["150","151"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Col, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneMode} from \"../http/modeApi\";\r\n\r\nconst ModePage = () => {\r\n    const [mode, setMode] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneMode(id).then(data => {\r\n            setMode(data)\r\n            console.log(data)\r\n        })\r\n    }, [])\r\n    return (\r\n        <Container className={\"mt-3\"}>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + mode.img}/>\r\n                </Col>\r\n                <Col md={4} >\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{mode.name}</h2>\r\n                    </Row>\r\n                    <div\r\n                        className={\"d-flex align-items-center justify-content-center \"}\r\n                        style={{background: `url(${bigStar}) no-repeat center center`, width:240, height:240, backgroundSize: 'cover', fontSize:64 }}\r\n\r\n                    >\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Опис</h1>\r\n                {mode.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.desc}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ModePage;","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\pages\\Mode.js",["152","153"],"import React, {useContext, useEffect} from \"react\";\r\nimport {Col, Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ModeList from \"../components/ModeList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchModes} from \"../http/modeApi\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Mode = observer(() => {\r\n    const {mode} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchModes(null, null, 1, 2).then(data => {\r\n            mode.setModes(data.rows)\r\n            mode.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchModes( mode.page, 2).then(data => {\r\n            mode.setModes(data.rows)\r\n            mode.setTotalCount(data.count)\r\n        })\r\n    }, [mode.page,])\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={9}>\r\n                    <ModeList/>\r\n                   <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n})\r\nexport default Mode;","C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\ModeList.js",[],"C:\\Users\\DELL\\Desktop\\Новая папка\\Wiki Brawl\\client\\src\\components\\ModeItem.js",[],{"ruleId":"154","severity":1,"message":"155","line":19,"column":8,"nodeType":"156","endLine":19,"endColumn":10,"suggestions":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"154","severity":1,"message":"162","line":22,"column":8,"nodeType":"156","endLine":22,"endColumn":10,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"162","line":29,"column":8,"nodeType":"156","endLine":29,"endColumn":60,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"169","line":12,"column":8,"nodeType":"156","endLine":12,"endColumn":10,"suggestions":"170"},{"ruleId":"165","severity":1,"message":"171","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":11},{"ruleId":"165","severity":1,"message":"172","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":33},{"ruleId":"154","severity":1,"message":"162","line":17,"column":8,"nodeType":"156","endLine":17,"endColumn":10,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"174","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"165","severity":1,"message":"175","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":37},{"ruleId":"165","severity":1,"message":"176","line":3,"column":17,"nodeType":"167","messageId":"168","endLine":3,"endColumn":25},{"ruleId":"165","severity":1,"message":"177","line":5,"column":23,"nodeType":"167","messageId":"168","endLine":5,"endColumn":33},{"ruleId":"165","severity":1,"message":"178","line":9,"column":12,"nodeType":"167","messageId":"168","endLine":9,"endColumn":16},{"ruleId":"165","severity":1,"message":"174","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"169","line":15,"column":8,"nodeType":"156","endLine":15,"endColumn":10,"suggestions":"179"},{"ruleId":"154","severity":1,"message":"180","line":18,"column":8,"nodeType":"156","endLine":18,"endColumn":10,"suggestions":"181"},{"ruleId":"154","severity":1,"message":"180","line":25,"column":8,"nodeType":"156","endLine":25,"endColumn":20,"suggestions":"182"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["183"],"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"React Hook useEffect has a missing dependency: 'hero'. Either include it or remove the dependency array.",["186"],["187"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["188"],"'Col' is defined but never used.","'createType' is defined but never used.",["189"],"'jwt_decode' is defined but never used.","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'fetchModes' is defined but never used.","'mode' is assigned a value but never used.",["190"],"React Hook useEffect has a missing dependency: 'mode'. Either include it or remove the dependency array.",["191"],["192"],{"desc":"193","fix":"194"},"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"195","fix":"201"},{"desc":"199","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [user]",{"range":"207","text":"208"},"Update the dependencies array to be: [hero]",{"range":"209","text":"210"},"Update the dependencies array to be: [hero.page, hero.selectedType, hero.selectedRarity, hero]",{"range":"211","text":"212"},"Update the dependencies array to be: [id]",{"range":"213","text":"214"},{"range":"215","text":"210"},{"range":"216","text":"214"},"Update the dependencies array to be: [mode]",{"range":"217","text":"218"},"Update the dependencies array to be: [mode, mode.page]",{"range":"219","text":"220"},[657,659],"[user]",[847,849],"[hero]",[1075,1127],"[hero.page, hero.selectedType, hero.selectedRarity, hero]",[453,455],"[id]",[683,685],[510,512],[607,609],"[mode]",[788,800],"[mode, mode.page]"]